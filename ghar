#!/bin/sh
# Copyright (C) 2009 Brandon Philips <brandon@ifup.org>
# Copyright (C) 2009 Graham Forest <vitaminmoo@obsoleet.org>
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

[ z"$GHAR_HOME" == "z" ] && GHAR_HOME=$HOME
[ z"$GHAR_DIR" == "z" ] && GHAR_DIR=$GHAR_HOME/.ghar
CONFIG=$GHAR_DIR/config

IAM=`basename $0`

shopt -s expand_aliases
[ -e $CONFIG ] && source $CONFIG


say() {
    [ $# != 1 ] && die "say() called improperly" 1
    echo "$IAM: $1"
}

die() {
	[ $# != 2 ] && die "die() called improperly" 1
	say "$2"
	exit $1
}


ghar_init() { # set up ghar's configuration file
	[ $# != 0 ] && die 1  "init: too many arguments"
	[ -e $GHAR_DIR ] && die 1 "Cannot init $GHAR_DIR already exists!"

	mkdir $GHAR_DIR && touch $CONFIG
}

ghar_create() { # create a new repo to add files to
	[ $# != 1 ] && die 1  "create: wrong number of arguments"
	
	[ ! -e $GHAR_DIR ] && ghar_init
	GITDIR=$GHAR_DIR/$1.git

	grep "function ghar_$1" $CONFIG > /dev/null\
		&& die 1 "create: $1 already exists"

	echo "function ghar_$1 () { git --git-dir=\$GHAR_DIR/$1.git\
		--work-tree=\$GHAR_HOME \$@; }" >> $CONFIG

	source $CONFIG

	ghar_$1 init
	echo "*" > $GITDIR/info/exclude
}

ghar_list() { # list all repos available for use
	[ $# != 0 ] && die 1  "list: wrong number of arguments"
	say "valid repositories:"
	grep "function ghar_" $CONFIG | cut -d_ -f2 | cut -d\  -f1\
		| sed 's/^/\t/'
}

FUNCTION=$1
shift
shopt -s expand_aliases

if [ -z `type -t ghar_$FUNCTION` ]; then
	echo "git home as repository"
	echo "usage: ghar <function|repository> [git command]"
	echo "Comands are:"
	grep "^ghar_.*() {" $0 | cut -d_ -f2\
		| sed 's/^/\t/; s/() { # /\t- /'
	ghar_list
	[ -z $FUNCTION ] && exit
	die 1 "error: \"$FUNCTION\" is not a valid function or repository"
else
	ghar_${FUNCTION} $@
fi
